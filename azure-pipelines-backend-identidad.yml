trigger:
  paths:
    include:
    - src/Services/Entidad/*
  branches:
    include:
    - main
variables:
- name: agentpool
  value: 'dockeragent_moises_2'
- name: prodEnvironmentName
  value: 'production'
- name: JAVA_LINK
  value: 'https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz'
- name: JAVA_VERSION
  value: '17.0.5'
- name: MAVEN_LINK
  value: 'https://dlcdn.apache.org/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz'
- name: MAVEN_VERSION
  value: '3.8.6'
- name: mainProjectName
  value: 'pokeshop-backend-identidad'
- name: azureSubscription
  value: 'Azure for Students(0c9ccb5a-239a-4bc1-ba6d-cfaf10231094)'
- name: azureSpringCloud
  value: '/subscriptions/0c9ccb5a-239a-4bc1-ba6d-cfaf10231094/resourceGroups/DefaultResourceGroup-CUS/providers/Microsoft.AppPlatform/Spring/asapokebackendidentidad'
- name: appName
  value: 'pokebackendidentidad'
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: $(agentpool)
    steps:
    - task: CmdLine@2
      displayName: 'Update system, its dependencies and install zip utility.'
      inputs:
        script: |
          apt-get update \
              && apt-get install -y zip tar wget unzip \
              && apt-get autoremove \
              && apt-get clean \
              && rm -rf /var/lib/apt/lists/*
    - task: CmdLine@2
      displayName: 'Download and extract JDK 17'
      inputs:
        script: |
          wget -q $(JAVA_LINK) \
              && tar -xf jdk-17_linux-x64_bin.tar.gz -C /opt
        workingDirectory: '$(System.DefaultWorkingDirectory)/src'
    - task: CmdLine@2
      displayName: 'Setting up Java environmental variables'
      inputs:
        script: |
          export JAVA_HOME=/opt/jdk-$(JAVA_VERSION) \
              && export PATH="$JAVA_HOME/bin:$PATH"
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: CmdLine@2
      displayName: 'Download and extract Maven $(MAVEN_VERSION)'
      inputs:
        script: |
          wget -q $(MAVEN_LINK) \
              && tar -xf apache-maven-$(MAVEN_VERSION)-bin.tar.gz -C /opt
        workingDirectory: '$(System.DefaultWorkingDirectory)/src'
    - task: CmdLine@2
      displayName: 'Setting up Maven environmental variables'
      inputs:
        script: |
          export M2_HOME=/opt/apache-maven-$(MAVEN_VERSION) \
              && export PATH="$M2_HOME/bin:$PATH"
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: CmdLine@2
      displayName: 'Create project folder'
      inputs:
        script: |
          mkdir pokeshop-backend
        workingDirectory: '$(System.DefaultWorkingDirectory)/src'
    - task: CmdLine@2
      displayName: 'Git clone modules'
      inputs:
        script: |
          git clone -b develop https://github.com/NyoByte/pokeshop-backend-utils \
            && git clone -b develop https://github.com/NyoByte/pokeshop-backend-entity-identidad
        workingDirectory: '$(System.DefaultWorkingDirectory)/src/pokeshop-backend'
    - task: CmdLine@2
      displayName: 'Copy main module'
      inputs:
        script: |
          cp -rf ../Services/Entidad/pokeshop-backend-identidad .
        workingDirectory: '$(System.DefaultWorkingDirectory)/src/pokeshop-backend'
    - task: Maven@4
      displayName: 'Clean install utils module'
      inputs:
        mavenPomFile: '$(System.DefaultWorkingDirectory)/src/pokeshop-backend/pokeshop-backend-utils/pom.xml'
        options: 'clean install -Dmaven.test.skip=true'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'Path'
        jdkDirectory: '/opt/jdk-$(JAVA_VERSION)'
        mavenVersionOption: 'Path'
        mavenDirectory: '/opt/apache-maven-$(MAVEN_VERSION)'
        mavenSetM2Home: true
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Maven@4
      displayName: 'Clean install entity-identidad module'
      inputs:
        mavenPomFile: '$(System.DefaultWorkingDirectory)/src/pokeshop-backend/pokeshop-backend-entity-identidad/pom.xml'
        options: 'clean install -Dmaven.test.skip=true'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'Path'
        jdkDirectory: '/opt/jdk-$(JAVA_VERSION)'
        mavenVersionOption: 'Path'
        mavenDirectory: '/opt/apache-maven-$(MAVEN_VERSION)'
        mavenSetM2Home: true
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Maven@4
      displayName: 'Deploy main module'
      inputs:
        mavenPomFile: '$(System.DefaultWorkingDirectory)/src/pokeshop-backend/$(mainProjectName)/pom.xml'
        options: 'clean package -Dmaven.test.skip=true -P prod'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'Path'
        jdkDirectory: '/opt/jdk-$(JAVA_VERSION)'
        mavenVersionOption: 'Path'
        mavenDirectory: '/opt/apache-maven-$(MAVEN_VERSION)'
        mavenSetM2Home: true
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: ArchiveFiles@2
      displayName: 'Archive files to publish folder'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/src/pokeshop-backend/$(mainProjectName)/target/$(mainProjectName).jar'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(System.DefaultWorkingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - task: CopyFiles@2
      displayName: 'Copy package to publish artifacts directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '$(System.DefaultWorkingDirectory)/$(Build.BuildId).zip'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
    - task: PublishPipelineArtifact@1
      displayName: 'Publish pipeline artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifact: '$(Build.BuildId)'
        publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy stage
  dependsOn:
  - Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment:
      name: $(prodEnvironmentName)
    pool:
      name: $(agentpool)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download pipeline artifacts'
            inputs:
              buildType: 'current'
              artifactName: '$(Build.BuildId)'
              targetPath: '$(Pipeline.Workspace)'
          - task: CmdLine@2
            displayName: 'Extract package file'
            inputs:
              script: 'unzip -o -q $(Pipeline.Workspace)/$(Build.BuildId).zip'
              workingDirectory: '$(Pipeline.Workspace)'
          - task: AzureSpringCloud@0
            displayName: 'Deploy to production as an Azure Spring App'
            inputs:
              azureSubscription: '$(azureSubscription)'
              Action: 'Deploy'
              AzureSpringCloud: '$(azureSpringCloud)'
              AppName: '$(appName)'
              UseStagingDeployment: false
              DeploymentName: 'default'
              Package: '$(Pipeline.Workspace)/$(mainProjectName).jar'
              JvmOptions: '-Xms256m -Xmx512m'

